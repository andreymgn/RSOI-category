// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/category/proto/category.proto

package category

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListCategoriesRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber           int32    `protobuf:"varint,2,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCategoriesRequest) Reset()         { *m = ListCategoriesRequest{} }
func (m *ListCategoriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListCategoriesRequest) ProtoMessage()    {}
func (*ListCategoriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_category_68b155f4386e14f2, []int{0}
}
func (m *ListCategoriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCategoriesRequest.Unmarshal(m, b)
}
func (m *ListCategoriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCategoriesRequest.Marshal(b, m, deterministic)
}
func (dst *ListCategoriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCategoriesRequest.Merge(dst, src)
}
func (m *ListCategoriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListCategoriesRequest.Size(m)
}
func (m *ListCategoriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCategoriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCategoriesRequest proto.InternalMessageInfo

func (m *ListCategoriesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCategoriesRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

type ListCategoriesResponse struct {
	Categories           []*SingleCategory `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	PageSize             int32             `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber           int32             `protobuf:"varint,3,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListCategoriesResponse) Reset()         { *m = ListCategoriesResponse{} }
func (m *ListCategoriesResponse) String() string { return proto.CompactTextString(m) }
func (*ListCategoriesResponse) ProtoMessage()    {}
func (*ListCategoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_category_68b155f4386e14f2, []int{1}
}
func (m *ListCategoriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCategoriesResponse.Unmarshal(m, b)
}
func (m *ListCategoriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCategoriesResponse.Marshal(b, m, deterministic)
}
func (dst *ListCategoriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCategoriesResponse.Merge(dst, src)
}
func (m *ListCategoriesResponse) XXX_Size() int {
	return xxx_messageInfo_ListCategoriesResponse.Size(m)
}
func (m *ListCategoriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCategoriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCategoriesResponse proto.InternalMessageInfo

func (m *ListCategoriesResponse) GetCategories() []*SingleCategory {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ListCategoriesResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCategoriesResponse) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

type SingleCategory struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserUid              string   `protobuf:"bytes,2,opt,name=userUid,proto3" json:"userUid,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleCategory) Reset()         { *m = SingleCategory{} }
func (m *SingleCategory) String() string { return proto.CompactTextString(m) }
func (*SingleCategory) ProtoMessage()    {}
func (*SingleCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_category_68b155f4386e14f2, []int{2}
}
func (m *SingleCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleCategory.Unmarshal(m, b)
}
func (m *SingleCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleCategory.Marshal(b, m, deterministic)
}
func (dst *SingleCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleCategory.Merge(dst, src)
}
func (m *SingleCategory) XXX_Size() int {
	return xxx_messageInfo_SingleCategory.Size(m)
}
func (m *SingleCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleCategory.DiscardUnknown(m)
}

var xxx_messageInfo_SingleCategory proto.InternalMessageInfo

func (m *SingleCategory) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *SingleCategory) GetUserUid() string {
	if m != nil {
		return m.UserUid
	}
	return ""
}

func (m *SingleCategory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateCategoryRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserUid              string   `protobuf:"bytes,2,opt,name=userUid,proto3" json:"userUid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCategoryRequest) Reset()         { *m = CreateCategoryRequest{} }
func (m *CreateCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCategoryRequest) ProtoMessage()    {}
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_category_68b155f4386e14f2, []int{3}
}
func (m *CreateCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCategoryRequest.Unmarshal(m, b)
}
func (m *CreateCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCategoryRequest.Marshal(b, m, deterministic)
}
func (dst *CreateCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCategoryRequest.Merge(dst, src)
}
func (m *CreateCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCategoryRequest.Size(m)
}
func (m *CreateCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCategoryRequest proto.InternalMessageInfo

func (m *CreateCategoryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCategoryRequest) GetUserUid() string {
	if m != nil {
		return m.UserUid
	}
	return ""
}

type GetCategoryInfoRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCategoryInfoRequest) Reset()         { *m = GetCategoryInfoRequest{} }
func (m *GetCategoryInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetCategoryInfoRequest) ProtoMessage()    {}
func (*GetCategoryInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_category_68b155f4386e14f2, []int{4}
}
func (m *GetCategoryInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCategoryInfoRequest.Unmarshal(m, b)
}
func (m *GetCategoryInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCategoryInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetCategoryInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCategoryInfoRequest.Merge(dst, src)
}
func (m *GetCategoryInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetCategoryInfoRequest.Size(m)
}
func (m *GetCategoryInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCategoryInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCategoryInfoRequest proto.InternalMessageInfo

func (m *GetCategoryInfoRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func init() {
	proto.RegisterType((*ListCategoriesRequest)(nil), "category.ListCategoriesRequest")
	proto.RegisterType((*ListCategoriesResponse)(nil), "category.ListCategoriesResponse")
	proto.RegisterType((*SingleCategory)(nil), "category.SingleCategory")
	proto.RegisterType((*CreateCategoryRequest)(nil), "category.CreateCategoryRequest")
	proto.RegisterType((*GetCategoryInfoRequest)(nil), "category.GetCategoryInfoRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CategoryClient is the client API for Category service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CategoryClient interface {
	ListCategories(ctx context.Context, in *ListCategoriesRequest, opts ...grpc.CallOption) (*ListCategoriesResponse, error)
	GetCategoryInfo(ctx context.Context, in *GetCategoryInfoRequest, opts ...grpc.CallOption) (*SingleCategory, error)
	CreateCategory(ctx context.Context, in *CreateCategoryRequest, opts ...grpc.CallOption) (*SingleCategory, error)
}

type categoryClient struct {
	cc *grpc.ClientConn
}

func NewCategoryClient(cc *grpc.ClientConn) CategoryClient {
	return &categoryClient{cc}
}

func (c *categoryClient) ListCategories(ctx context.Context, in *ListCategoriesRequest, opts ...grpc.CallOption) (*ListCategoriesResponse, error) {
	out := new(ListCategoriesResponse)
	err := c.cc.Invoke(ctx, "/category.Category/ListCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryClient) GetCategoryInfo(ctx context.Context, in *GetCategoryInfoRequest, opts ...grpc.CallOption) (*SingleCategory, error) {
	out := new(SingleCategory)
	err := c.cc.Invoke(ctx, "/category.Category/GetCategoryInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryClient) CreateCategory(ctx context.Context, in *CreateCategoryRequest, opts ...grpc.CallOption) (*SingleCategory, error) {
	out := new(SingleCategory)
	err := c.cc.Invoke(ctx, "/category.Category/CreateCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CategoryServer is the server API for Category service.
type CategoryServer interface {
	ListCategories(context.Context, *ListCategoriesRequest) (*ListCategoriesResponse, error)
	GetCategoryInfo(context.Context, *GetCategoryInfoRequest) (*SingleCategory, error)
	CreateCategory(context.Context, *CreateCategoryRequest) (*SingleCategory, error)
}

func RegisterCategoryServer(s *grpc.Server, srv CategoryServer) {
	s.RegisterService(&_Category_serviceDesc, srv)
}

func _Category_ListCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCategoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServer).ListCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.Category/ListCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServer).ListCategories(ctx, req.(*ListCategoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Category_GetCategoryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCategoryInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServer).GetCategoryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.Category/GetCategoryInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServer).GetCategoryInfo(ctx, req.(*GetCategoryInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Category_CreateCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServer).CreateCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.Category/CreateCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServer).CreateCategory(ctx, req.(*CreateCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Category_serviceDesc = grpc.ServiceDesc{
	ServiceName: "category.Category",
	HandlerType: (*CategoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCategories",
			Handler:    _Category_ListCategories_Handler,
		},
		{
			MethodName: "GetCategoryInfo",
			Handler:    _Category_GetCategoryInfo_Handler,
		},
		{
			MethodName: "CreateCategory",
			Handler:    _Category_CreateCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/category/proto/category.proto",
}

func init() {
	proto.RegisterFile("pkg/category/proto/category.proto", fileDescriptor_category_68b155f4386e14f2)
}

var fileDescriptor_category_68b155f4386e14f2 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcd, 0x4e, 0x83, 0x40,
	0x14, 0x85, 0x33, 0xad, 0x3f, 0x70, 0x4d, 0xd0, 0xdc, 0xa4, 0x0d, 0x61, 0xa1, 0xc8, 0xaa, 0x71,
	0xd1, 0x26, 0x75, 0xe3, 0xbe, 0x31, 0xc6, 0xf8, 0x13, 0x33, 0xc4, 0x07, 0xa0, 0xed, 0x95, 0x4c,
	0xb4, 0x80, 0x0c, 0x2c, 0xf0, 0x21, 0x7c, 0x61, 0x37, 0xa6, 0x23, 0x0c, 0xd0, 0x82, 0xbb, 0x7b,
	0x86, 0x33, 0x27, 0x1f, 0xe7, 0x0e, 0x5c, 0x26, 0xef, 0xe1, 0x6c, 0x15, 0x64, 0x14, 0xc6, 0x69,
	0x31, 0x4b, 0xd2, 0x38, 0x8b, 0xb5, 0x9c, 0x2a, 0x89, 0x46, 0xa5, 0x3d, 0x1f, 0x46, 0x8f, 0x42,
	0x66, 0x8b, 0x3f, 0x2d, 0x48, 0x72, 0xfa, 0xcc, 0x49, 0x66, 0xe8, 0x80, 0x91, 0x04, 0x21, 0xf9,
	0xe2, 0x8b, 0x6c, 0xe6, 0xb2, 0xc9, 0x21, 0xd7, 0x1a, 0xcf, 0x01, 0xb6, 0xf3, 0x73, 0xbe, 0x59,
	0x52, 0x6a, 0x0f, 0xd4, 0xd7, 0xc6, 0x89, 0xf7, 0xcd, 0x60, 0xbc, 0x9b, 0x2a, 0x93, 0x38, 0x92,
	0x84, 0x37, 0x00, 0x2b, 0x7d, 0x6a, 0x33, 0x77, 0x38, 0x39, 0x99, 0xdb, 0x53, 0x8d, 0xe7, 0x8b,
	0x28, 0xfc, 0xa0, 0xf2, 0x5e, 0xc1, 0x1b, 0xde, 0x16, 0xd0, 0xe0, 0x5f, 0xa0, 0xe1, 0x1e, 0xd0,
	0x0b, 0x58, 0xed, 0x64, 0x3c, 0x83, 0x61, 0x2e, 0xd6, 0xea, 0xcf, 0x4c, 0xbe, 0x1d, 0xd1, 0x86,
	0xe3, 0x5c, 0x52, 0xfa, 0x2a, 0xd6, 0x2a, 0xde, 0xe4, 0x95, 0x44, 0x84, 0x83, 0x28, 0xd8, 0x90,
	0xca, 0x35, 0xb9, 0x9a, 0xbd, 0x5b, 0x18, 0x2d, 0x52, 0x0a, 0xb2, 0x9a, 0xb5, 0xec, 0xad, 0x32,
	0xb3, 0xda, 0xdc, 0x1f, 0xed, 0x5d, 0xc1, 0xf8, 0x8e, 0xaa, 0x9e, 0x8a, 0xfb, 0xe8, 0x2d, 0xae,
	0x72, 0xf6, 0x00, 0xe7, 0x3f, 0x0c, 0x0c, 0xcd, 0xef, 0x83, 0xd5, 0x6e, 0x18, 0x2f, 0xea, 0x16,
	0x3b, 0x37, 0xea, 0xb8, 0xfd, 0x86, 0x72, 0x39, 0x4f, 0x70, 0xba, 0x43, 0x83, 0x8d, 0x4b, 0xdd,
	0xa0, 0x4e, 0xef, 0xf6, 0xf0, 0x01, 0xac, 0x76, 0x47, 0x4d, 0xc6, 0xce, 0xf6, 0xfa, 0xc3, 0x96,
	0x47, 0xea, 0xe5, 0x5e, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x35, 0x4d, 0xcc, 0xde, 0x02,
	0x00, 0x00,
}
